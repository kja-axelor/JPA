import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Path;
import javax.persistence.criteria.Root;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {
    
    public static void main(String args[]) {
    		
    	 EntityManagerFactory emf = Persistence.createEntityManagerFactory("persistenceUnitName");
    	
    	 EntityManager em = emf.createEntityManager();
    	
    	 em.getTransaction().begin();  
    	 
    	 // criteria builder
    	 CriteriaBuilder cb = em.getCriteriaBuilder();  
    	 
    	 // criteria Query
    	 CriteriaQuery<Object[]> cq = cb.createQuery(Object[].class);  
    	 
    	 // root
    	 Root<Student> root = cq.from(Student.class);  
    	   
    	 // multiselect
    	 cq.multiselect(root.get("age"),cb.count(root)).groupBy(root.get("age")).having(cb.le(root.get("age"), 24));  
    	        
    	 // printing stmt
    	 System.out.print("age");  
    	 System.out.println("\t Count");  
    	 
    	 // create Query
    	 TypedQuery<Object[]> query = em.createQuery(cq) ;
    	 
    	 // result list
    	 List<Object[]> list = query.getResultList();
    	 
    	 // getting value through enhance for loop
    	 for(Object [] object : list){  
    	     System.out.println(object[0] + " " + object[1]);  
    	   
    	 }  
    	 
    	 em.getTransaction().commit();  
         emf.close();  
         em.close();  
    }
}